name: CI/CD

on:
  push:
    branches: [ main ]

jobs:
  build:
    name: Building image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Build and export
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: dvetter/goerlitzer-ferienhaus:latest
          outputs: type=docker,dest=/tmp/docker-image.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: docker-image
          path: /tmp/docker-image.tar

  publish_to_dockerhub:
    name: Publishing image to dockerhub
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: docker-image
          path: /tmp

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Upload image
        run: |
          docker load --input /tmp/docker-image.tar
          docker push dvetter/goerlitzer-ferienhaus

  publish_to_github:
    name: Publishing image to github
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: docker-image
          path: /tmp

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Github
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

      - name: Push image
        run: |
          OLD_IMAGE_ID=dvetter/goerlitzer-ferienhaus:latest
          NEW_IMAGE_ID=ghcr.io/${{ github.repository_owner }}/goerlitzer-ferienhaus:${{ github.sha }}
          docker tag $OLD_IMAGE_ID $NEW_IMAGE_ID
          docker push $NEW_IMAGE_ID

  update_server:
    name: Updating prod environment
    runs-on: ubuntu-latest
    needs: [publish_to_dockerhub, publish_to_github]
    steps:
      - name: Replacing container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOSTNAME }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 5000
          script: |
            docker image pull dvetter/goerlitzer-ferienhaus
            docker container stop goerlitzer-ferienhaus-prod
            docker container prune -f
            docker run -d --name goerlitzer-ferienhaus-prod --restart unless-stopped --volume /data/goerlitzer-ferienhaus-prod:/data --publish 5020:80 --env Smtp__Password=${{ secrets.SMTP_PASSWORD }} dvetter/goerlitzer-ferienhaus
            docker image prune -f
            sleep 5
            curl localhost/status -sSf --retry 5
            
